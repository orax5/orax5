// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User{
  user_no Int @default(autoincrement()) @id
  user_email String @unique @db.Char(20)
  user_pwd String 
  user_nickname String @db.Char(12)
  user_grade Int @default(1)
  user_wallet String @unique @db.Char(64)
  user_email_token String @default("")
  shopcarts Cart[]
}

//====  펀딩 관련 테이블
// shin_ispermit 1: 심사대기 2: 심사완료(승인) 3: 반려
model Shinchunghada{
  shin_no Int @default(autoincrement()) @id
  shin_title String @unique @db.Char(20)
  shin_amount Int
  shin_nft_totalbalance Int
  shin_cover String
  shin_period	Int
  shin_description String
  shin_category String
  shin_ispermit Int @default(1)
  shin_creator_address String @db.Char(64)
  funding Funding[]
  singer Singer[]
  composer Composer[]
  lyricist Lyricist[]
}

// fund_state: 1 - 펀딩 중 2-펀딩성공 3-펀딩실패
model Funding{
  fund_no Int @default(autoincrement()) @id
  fund_state Int @default(1)
  fund_pinurl String?
  ifFundingOpen Shinchunghada @relation(fields: [shin_no], references: [shin_no])
  shin_no Int @unique
}
 
model Singer{
  sing_no Int @default(autoincrement()) @id
  sing_name String
  fundingID Shinchunghada @relation(fields: [shin_no], references: [shin_no])
  shin_no Int @unique
}

model Composer{
  com_no Int @default(autoincrement()) @id
  com_name String
  fundingID Shinchunghada @relation(fields: [shin_no], references: [shin_no])
  shin_no Int @unique
}

model Lyricist{
  lyric_no Int @default(autoincrement()) @id
  lyric_name String
  fundingID Shinchunghada @relation(fields: [shin_no], references: [shin_no])
  shin_no Int @unique
}

/////==== 가수 작곡가 작사가 테이블이랑 스트리밍 테이블이랑 연관성 X ===================
//==== 스트리밍 관련 테이블

model Music{
  music_no Int @default(autoincrement()) @id
  music_title String @db.VarChar(50)
  music_lyricist String @db.Char(20)
  music_composer String @db.Char(20)
  music_singer String @db.Char(20)
  music_category String @db.Char(20) 
  music_description String
  music_isfunding Boolean?
  musicFilePath MusicFile[]
}

model MusicFile{
  mf_no Int @default(autoincrement()) @id
  mf_path String 
  musicnumber Music @relation(fields: [music_no], references: [music_no])
  music_no Int
}


///=====굿즈shop 관련 테이블
model Product{
  product_no Int @default(autoincrement()) @id
  product_price Int @db.Int()
  product_descrip String 
  cartIds Cart[]
}

model Cart{
  cart_no Int @default(autoincrement()) @id
  user_IDnumber User @relation(fields: [user_no], references: [user_no])
  user_no Int
  productIds Product @relation(fields: [product_no], references: [product_no])
  product_no Int
}
